2025-02-05 11:20:22.729554: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2025-02-05 11:20:25.992068: E tensorflow/stream_executor/cuda/cuda_blas.cc:2981] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2025-02-05 11:20:30.034115: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64
2025-02-05 11:20:30.034619: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64
2025-02-05 11:20:30.034648: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/data/miniconda3/envs/proteingym_env/lib/python3.10/site-packages/Bio/Application/__init__.py:39: BiopythonDeprecationWarning: The Bio.Application modules and modules relying on it have been deprecated.

Due to the on going maintenance burden of keeping command line application
wrappers up to date, we have decided to deprecate and eventually remove these
modules.

We instead now recommend building your command line and invoking it directly
with the subprocess module.
  warnings.warn(
/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/trancepteve/utils/msa_utils.py:310: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  self.seq_name_to_sequence[msa_df.index[seq_idx]] = msa_df.sequence[seq_idx]
Traceback (most recent call last):
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/score_trancepteve.py", line 209, in <module>
    main()
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/score_trancepteve.py", line 157, in main
    model = trancepteve.model_pytorch.TrancepteveLMHeadModel.from_pretrained(pretrained_model_name_or_path=args.checkpoint,config=config)
  File "/data/miniconda3/envs/proteingym_env/lib/python3.10/site-packages/transformers/modeling_utils.py", line 2876, in from_pretrained
    model = cls(config, *model_args, **model_kwargs)
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/trancepteve/model_pytorch.py", line 690, in __init__
    self.MSA_log_prior, self.MSA_processed_depth = msa_utils.get_msa_prior(
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/trancepteve/utils/msa_utils.py", line 96, in get_msa_prior
    MSA_EVE = MSA_processing(
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/trancepteve/utils/msa_utils.py", line 263, in __init__
    self.gen_alignment()
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/trancepteve/utils/msa_utils.py", line 393, in gen_alignment
    self.seq_name_to_weight[seq_name]=self.weights[i]
IndexError: index 299 is out of bounds for axis 0 with size 299
2025-02-05 11:20:48.551393: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2025-02-05 11:20:48.758752: E tensorflow/stream_executor/cuda/cuda_blas.cc:2981] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2025-02-05 11:20:49.685920: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64
2025-02-05 11:20:49.686076: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64
2025-02-05 11:20:49.686101: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/data/miniconda3/envs/proteingym_env/lib/python3.10/site-packages/Bio/Application/__init__.py:39: BiopythonDeprecationWarning: The Bio.Application modules and modules relying on it have been deprecated.

Due to the on going maintenance burden of keeping command line application
wrappers up to date, we have decided to deprecate and eventually remove these
modules.

We instead now recommend building your command line and invoking it directly
with the subprocess module.
  warnings.warn(
/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/trancepteve/utils/msa_utils.py:310: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  self.seq_name_to_sequence[msa_df.index[seq_idx]] = msa_df.sequence[seq_idx]
Traceback (most recent call last):
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/score_trancepteve.py", line 209, in <module>
    main()
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/score_trancepteve.py", line 157, in main
    model = trancepteve.model_pytorch.TrancepteveLMHeadModel.from_pretrained(pretrained_model_name_or_path=args.checkpoint,config=config)
  File "/data/miniconda3/envs/proteingym_env/lib/python3.10/site-packages/transformers/modeling_utils.py", line 2876, in from_pretrained
    model = cls(config, *model_args, **model_kwargs)
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/trancepteve/model_pytorch.py", line 690, in __init__
    self.MSA_log_prior, self.MSA_processed_depth = msa_utils.get_msa_prior(
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/trancepteve/utils/msa_utils.py", line 96, in get_msa_prior
    MSA_EVE = MSA_processing(
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/trancepteve/utils/msa_utils.py", line 263, in __init__
    self.gen_alignment()
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/trancepteve/utils/msa_utils.py", line 393, in gen_alignment
    self.seq_name_to_weight[seq_name]=self.weights[i]
IndexError: index 299 is out of bounds for axis 0 with size 299
2025-02-05 11:21:08.104454: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  AVX2 FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2025-02-05 11:21:08.329123: E tensorflow/stream_executor/cuda/cuda_blas.cc:2981] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2025-02-05 11:21:09.211984: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer.so.7'; dlerror: libnvinfer.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64
2025-02-05 11:21:09.212131: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'libnvinfer_plugin.so.7'; dlerror: libnvinfer_plugin.so.7: cannot open shared object file: No such file or directory; LD_LIBRARY_PATH: /usr/local/cuda/lib64
2025-02-05 11:21:09.212159: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Cannot dlopen some TensorRT libraries. If you would like to use Nvidia GPU with TensorRT, please make sure the missing libraries mentioned above are installed properly.
/data/miniconda3/envs/proteingym_env/lib/python3.10/site-packages/Bio/Application/__init__.py:39: BiopythonDeprecationWarning: The Bio.Application modules and modules relying on it have been deprecated.

Due to the on going maintenance burden of keeping command line application
wrappers up to date, we have decided to deprecate and eventually remove these
modules.

We instead now recommend building your command line and invoking it directly
with the subprocess module.
  warnings.warn(
/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/trancepteve/utils/msa_utils.py:310: FutureWarning: Series.__getitem__ treating keys as positions is deprecated. In a future version, integer keys will always be treated as labels (consistent with DataFrame behavior). To access a value by position, use `ser.iloc[pos]`
  self.seq_name_to_sequence[msa_df.index[seq_idx]] = msa_df.sequence[seq_idx]
Traceback (most recent call last):
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/score_trancepteve.py", line 209, in <module>
    main()
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/score_trancepteve.py", line 157, in main
    model = trancepteve.model_pytorch.TrancepteveLMHeadModel.from_pretrained(pretrained_model_name_or_path=args.checkpoint,config=config)
  File "/data/miniconda3/envs/proteingym_env/lib/python3.10/site-packages/transformers/modeling_utils.py", line 2876, in from_pretrained
    model = cls(config, *model_args, **model_kwargs)
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/trancepteve/model_pytorch.py", line 690, in __init__
    self.MSA_log_prior, self.MSA_processed_depth = msa_utils.get_msa_prior(
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/trancepteve/utils/msa_utils.py", line 96, in get_msa_prior
    MSA_EVE = MSA_processing(
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/trancepteve/utils/msa_utils.py", line 263, in __init__
    self.gen_alignment()
  File "/home/dahala/mnt/PRIZM/ModellerModule/proteingym/baselines/trancepteve/trancepteve/utils/msa_utils.py", line 393, in gen_alignment
    self.seq_name_to_weight[seq_name]=self.weights[i]
IndexError: index 299 is out of bounds for axis 0 with size 299
